<project name="davenport" default="usage" basedir=".">

    <property name="build" value="build"/>

    <property name="version" value="0.9.8"/>

    <property name="distribution" value="davenport-${version}"/>

    <target name="usage">
        <echo>
Available Build Targets:

dependencies: Checks that all class dependencies are met.
     compile: Builds the Davenport classes.
         jar: Packages the Davenport classes into a .jar file.
         war: Packages the Davenport application into a .war file
              for deployment.
     javadoc: Creates the Javadoc API documentation.
         all: Performs all of the above.

       clean: Removes build artifacts.
    allclean: Removes distribution and build artifacts.  This
              includes the .jar and .war files, .class files, and
              the Javadoc API documentation.

   davenport: Builds the "all" target, followed by "clean".  This
              reproduces the distribution package contents.
     distrib: Builds the "davenport" target, and additionally
              recreates the .zip and .tgz downloadable
              distributions.
    reconfig: Refreshes the Davenport .war file with the current
              version of the deployment descriptor ("web.xml")
              from the source tree.
    checksum: Creates MD5 checksums of the .zip and .tgz
              distributions.

       usage: Displays this message.</echo>
    </target>

    <target name="hasServlet" unless="hasServlet">
        <fail>

    The Java Servlet API classes could not be found.  These files can be
    obtained from:

        http://java.sun.com/products/servlet/download.html
        </fail>
    </target>

    <target name="hasJAXP" unless="hasJAXP">
        <fail>

    The Java API for XML Processing (JAXP) XML Parser classes could not
    be found.  These files can be obtained from:

        http://java.sun.com/xml/downloads/jaxp.html
        </fail>
    </target>

    <target name="hasXSLT" unless="hasXSLT">
        <fail>

    The Java API for XML Processing (JAXP) XSLT Transformer classes could
    not be found.

        http://java.sun.com/xml/downloads/jaxp.html
        </fail>
    </target>

    <target name="hasjCIFS" unless="hasjCIFS">
        <fail>

    The jCIFS classes could not be found.  These files can be obtained from:

        http://jcifs.samba.org/
        </fail>
    </target>

    <target name="dependencies">
        <mkdir dir="lib"/>
        <available classname="javax.servlet.Servlet" property="hasServlet">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </available>
        <antcall target="hasServlet"/>
        <available classname="javax.xml.parsers.DocumentBuilder" property="hasJAXP">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </available>
        <antcall target="hasJAXP"/>
        <available classname="javax.xml.transform.Transformer" property="hasXSLT">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </available>
        <antcall target="hasXSLT"/>
        <available classname="jcifs.http.NtlmSsp" property="hasjCIFS">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </available>
        <antcall target="hasjCIFS"/>
    </target>

    <target name="compile" depends="dependencies">
        <mkdir dir="${build}/classes"/>
        <fixcrlf srcdir="src/java" tab="remove" tablength="4"/>
        <javac srcdir="src/java" destdir="${build}/classes">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
        <copy todir="${build}/classes/smbdav">
            <fileset dir="src/resources">
                <include name="*.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="davenport.jar">
            <zipfileset prefix="META-INF" dir="src/xsl"/>
            <zipfileset prefix="META-INF" dir="src/html"/>
            <fileset dir="${build}/classes"/>
        </jar>
    </target>

    <target name="war" depends="jar">
        <war warfile="davenport.war" webxml="src/misc/web.xml">
            <lib dir="lib">
                <include name="**/*.jar"/>
            </lib>
            <lib dir=".">
                <include name="davenport.jar"/>
            </lib>
        </war>
    </target>

    <target name="reconfig">
        <war update="true" warfile="davenport.war" webxml="src/misc/web.xml"/>
    </target>

    <target name="javadoc">
        <javadoc destdir="doc/api"
            packagenames="smbdav.*"
            overview="doc/api/overview.html"
            author="true"
            version="true"
            use="true"
            windowtitle="Davenport"
            doctitle="&lt;img src='../davenport.gif'&gt;"
            stylesheetfile="doc/api/stylesheet.css"
            bottom="&lt;i&gt;Copyright &#169; 2003 Eric Glass&lt;/i&gt;">
            <classpath>
                <pathelement path="${java.class.path}"/>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <sourcepath path="src/java"/>
        </javadoc>
    </target>

    <target name="all" depends="war,javadoc"/>

    <target name="clean">
        <delete quiet="true" includeEmptyDirs="true" dir="${build}"/>
    </target>

    <target name="allclean" depends="clean">
        <delete quiet="true">
            <fileset dir=".">
                <include name="${distribution}.zip"/>
                <include name="${distribution}.zip.MD5"/>
                <include name="${distribution}.tgz"/>
                <include name="${distribution}.tgz.MD5"/>
                <include name="davenport.jar"/>
                <include name="davenport.war"/>
            </fileset>
        </delete>
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir="doc/api">
                <exclude name="overview.html"/>
                <exclude name="stylesheet.css"/>
            </fileset>
        </delete>
    </target>

    <target name="davenport" depends="all,clean"/>

    <target name="distrib" depends="davenport">
        <zip zipfile="${distribution}.zip">
            <zipfileset prefix="${distribution}" dir=".">
                <include name="**"/>
                <exclude name="${distribution}.zip"/>
                <exclude name="${distribution}.zip.MD5"/>
                <exclude name="${distribution}.tgz"/>
                <exclude name="${distribution}.tgz.MD5"/>
            </zipfileset>
        </zip>
        <delete quiet="true" includeEmptyDirs="true" dir="distrib-tmp"/>
        <mkdir dir="distrib-tmp"/>
        <unzip src="${distribution}.zip" dest="distrib-tmp"/>
        <tar tarfile="${distribution}.tar" basedir="distrib-tmp"/>
        <delete quiet="true" includeEmptyDirs="true" dir="distrib-tmp"/>
        <gzip src="${distribution}.tar" zipfile="${distribution}.tgz"/>
        <delete quiet="true" includeEmptyDirs="true">
            <fileset dir=".">
                <include name="${distribution}.tar"/>
            </fileset>
        </delete>
    </target>

    <target name="checksum">
        <checksum file="${distribution}.zip"/>
        <checksum file="${distribution}.tgz"/>
    </target>

</project>
